# # Подбрасываем игральную кость 60 раз. Нас интересует, с какой вероятностью мы увидим 3. 
# # Для этого нам нужно посчитать, сколько раз из 60 выпала 3, а потом это количество разделить на 60

# # import numpy as np
# # np.random.seed(1)
# # n = 60
# # b = np.random.randint(1, 7, n)
# # print(b)
# # a = b [b == 3]
# # print(a)
# # m = len(a)
# # print(m)

# # #Относительная частота события А

# # W = m / n
# # print(W)

# #####################################################################

# # Смоделируем ситуацию, когда бросают две игральные кости одновременно 360 раз. 
# # Посчитаем относительную частоту события, когда на одной кости выпадает 1, в на другой 2

# import numpy as np
# np.random.seed(1)
# n = 360
# c = np.random.randint(1, 7, n)
# d = np.random.randint(1, 7, n)
# print(c, d)
# a = c [(c == 1) & (d == 2)]
# m = len(a)
# W = m/n
# print(W)

########################################################################

# Сколькими способами можно выбрать из колоды, состоящей из 36 карт, 4 карты? 

# import math

# def combinations (n, k):
#     return(math.factorial(n) // (math.factorial(k) * math.factorial(n-k)))

# print(combinations(36, 4))
# print(math.comb(36, 4))

###########################################################################

# В магазине 20 покупателей. Сколькими способами они могут образовать очередь из 5 человек?

# import math

# def arrangements (n, k):
#     return(math.factorial(n) // math.factorial(n - k))

# print(arrangements(20, 5))
# print(math.perm(20, 5))

#############################################################################

# Сколькими способами 5 покупателей могут образовать очередь?

# import math

# def permutations (n):
#     return(math.factorial(n))

# print(permutations(5))
# print(math.perm(5))

##############################################################################

# Из колоды, состоящей из 36 карт, случайным образом выбраны 5. Сколькими способами можно выбрать эти карты так, 
# чтобы среди них оказалось 2 туза?

# import math

# m = math.comb(4, 2)
# print('Число сочетаний по 2 туза из 4-х:', m)

# n = math.comb(32, 3)
# print('Число сочетаний по 3 карты из 32-х (не учитываются тузы):', n)

# # Сочетания 5 карт из 36, чтобы среди них оказалось 2 туза
# C = m * n
# print(C)

###########################################################################

# Из колоды 36 карт случайным образом берут 5 карт. Найти вероятность того, среди 5 карт будет 2 туза

import math

m = math.comb(4, 2)
n = math.comb(32, 3)
print('Число сочетаний по 2 туза из 4-х:', m)
print('Число сочетаний по 3 карты из 32-х (не учитываются тузы):', n)

C1 = m * n
print('Число сочетаний по 5 карт с 2-мя тузами из 36:', C1)

C2 = math.comb(36, 5)
print('Число сочетаний по 5 карт из 36:', C2)

# Вероятность того, среди 5 карт будет 2 туза
P = C1 / C2
print('Вероятность того, среди 5 карт будет 2 туза', round(P, 4))










